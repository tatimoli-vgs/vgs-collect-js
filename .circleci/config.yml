version: 2.1

defaults_ci: &defaults_ci
  working_directory: ~/vgs-collect-js
  docker:
    - image: cimg/deploy:2023.09-node

# === Scheduled Pipeline Parameters ===
parameters:
  nightly-security-scan:
    type: boolean
    default: false

jobs:
  test:
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run: npm run test

  publish:
    executor: node/default
    steps:
      - checkout
      - run:
          name: Authenticate with NPM
          command: |
            echo "//registry.npmjs.org/:_authToken=$NPM_VGS_PUBLISH_TOKEN" >> ~/project/.npmrc
            npm ci
      - run:
          name: Publish package
          command: |
            npm publish --access public

  scan-sast-pr:
    parameters:
      default_branch:
        type: string
        default: master
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
      SEMGREP_BASELINE_REF: << parameters.default_branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep diff scan"
          command: semgrep ci

  scan-sast-full:
    parameters:
      default_branch:
        type: string
        default: master
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep full scan"
          command: semgrep ci

workflows:
  version: 2
  test-and-publish:
    when:
      not: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - test
      - scan-sast-pr:
          context:
            - security-tools
            - frontend-deploy

      - scan-sast-full:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            tags:
              only:
                - /production-.*/
          context:
            - security-tools
            - frontend-deploy

      - publish:
          context: frontend-deploy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

  scheduled-security-scan:
    when: << pipeline.parameters.nightly-security-scan >>
    jobs:
    - scan-sast-full:
        context:
          - security-tools
          - frontend-deploy
